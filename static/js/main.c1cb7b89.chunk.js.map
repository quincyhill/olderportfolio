{"version":3,"sources":["components/DropDownContent.js","components/DropDownButton.js","components/MyData.js","containers/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["DropDownContent","props","this","content","Component","DropDownButton","state","isClicked","CONTENT","className","onClick","setState","name","displayFunction","data","first","second","third","href","fourth","HomePage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6SAEqBA,G,kBACnB,WAAYC,GAAQ,qEACZA,I,sEAIN,OACE,6BACE,2BAAIC,KAAKD,MAAME,c,GARsBC,cCExBC,E,YACnB,WAAYJ,GAAQ,IAAD,8BACjB,4CAAMA,KACDK,MAAQ,CAAEC,WAAW,EAAOC,QAAS,wBAFzB,E,6EAKHD,GACd,GAAIA,EACF,OAAO,kBAAC,EAAD,CAAiBJ,QAASD,KAAKD,MAAME,Y,+BAItC,IAAD,OACP,OACE,6BACE,4BACEM,UAAU,gBACVC,QAAS,WACP,EAAKC,SAAS,CAAEJ,WAAY,EAAKD,MAAMC,cAGxCL,KAAKD,MAAMW,MAEbV,KAAKW,gBAAgBX,KAAKI,MAAMC,gB,GAvBGH,aCF/BU,G,MAAO,CAClBC,MACE,wMACFC,OAAQ,0DACRC,MACE,6BACE,mDACA,4BACE,4BACE,uBAAGC,KAAK,iDAAR,kBAKJ,wDACA,4BACE,4BACE,uBAAGA,KAAK,6CAAR,6BAORC,OACE,6BACE,0CACA,4BACE,8CACA,oCACA,mCACA,iEACA,qEACA,wCACA,6DACA,0CAEF,2CACA,4BACE,oCACA,kCACA,mCACA,qCACA,2CCzCaC,E,iLAEjB,OACE,6BACE,8BACE,oDAEF,8BACE,4BAAQX,UAAU,YAChB,yBAAKA,UAAU,oBACb,2CACA,mDACA,mEACA,oDACA,4BACE,uBAAGS,KAAK,iCAAR,WAEF,4BACE,uBAAGA,KAAK,sDAAR,eAMN,6BAEA,yBAAKT,UAAU,aACb,iCACE,kBAAC,EAAD,CAAgBG,KAAK,QAAQT,QAASW,EAAKC,SAE7C,iCACE,kBAAC,EAAD,CAAgBH,KAAK,YAAYT,QAASW,EAAKE,UAEjD,iCACE,kBAAC,EAAD,CACEJ,KAAK,wBACLT,QAASW,EAAKG,SAGlB,iCACE,kBAAC,EAAD,CAAgBL,KAAK,YAAYT,QAASW,EAAKK,WAGnD,4BAAQV,UAAU,UAChB,2D,GA5C0BL,aCOvBiB,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.c1cb7b89.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class DropDownContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>{this.props.content}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./DropDownButton.css\";\r\nimport DropDownContent from \"../components/DropDownContent\";\r\n\r\nexport default class DropDownButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isClicked: false, CONTENT: \"This is some content\" };\r\n  }\r\n\r\n  displayFunction(isClicked) {\r\n    if (isClicked) {\r\n      return <DropDownContent content={this.props.content} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className='drop-down-btn'\r\n          onClick={() => {\r\n            this.setState({ isClicked: !this.state.isClicked });\r\n          }}\r\n        >\r\n          {this.props.name}\r\n        </button>\r\n        {this.displayFunction(this.state.isClicked)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DropDownContent from \"../components/DropDownContent\";\r\nexport const data = {\r\n  first:\r\n    \"Focused on delivering appealing and pragmatic products with a strong inclination to learn, be it in school or in my free time. Mechanical engineering as well as web and mobile applications focused.\",\r\n  second: \"Engineering Transfer Undergraduate, College Lake County\",\r\n  third: (\r\n    <div>\r\n      <h2>Personal Projects: </h2>\r\n      <ul>\r\n        <li>\r\n          <a href='https://github.com/quincyhill/django_practice'>\r\n            Backend Work\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <h2>Collaborative Projects: </h2>\r\n      <ul>\r\n        <li>\r\n          <a href='https://github.com/open-source-developers'>\r\n            Open Source Developers\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  ),\r\n  fourth: (\r\n    <div>\r\n      <h2>Proficient</h2>\r\n      <ul>\r\n        <li>Javascript ES6</li>\r\n        <li>HTML</li>\r\n        <li>CSS</li>\r\n        <li>React JS - (Javascript) FRAMEWORK</li>\r\n        <li>React Native - (Javascript) FRAMEWORK</li>\r\n        <li>Python 3</li>\r\n        <li>Django - (Python 3) FRAMEWORK</li>\r\n        <li>Git - SCM</li>\r\n      </ul>\r\n      <h2>Understands</h2>\r\n      <ul>\r\n        <li>Java</li>\r\n        <li>C#</li>\r\n        <li>lua</li>\r\n        <li>Linux</li>\r\n        <li>UI / UX</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n};\r\n","import React, { Component } from \"react\";\r\nimport DropDownButton from \"../components/DropDownButton\";\r\nimport \"./HomePage.css\";\r\nimport { data } from \"../components/MyData\";\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <head>\r\n          <title>This is MY title</title>\r\n        </head>\r\n        <body>\r\n          <header className='showcase'>\r\n            <div className='showcase-content'>\r\n              <h1>Quincy Hill</h1>\r\n              <p>Engineer | Developer</p>\r\n              <h3>Email : therealquincyhill@gmail.com</h3>\r\n              <h3>Phone : 224-256-0892</h3>\r\n              <h3>\r\n                <a href='https://github.com/quincyhill'>Github</a>\r\n              </h3>\r\n              <h3>\r\n                <a href='https://www.linkedin.com/in/quincy-hill-4bb550176/'>\r\n                  LinkedIn\r\n                </a>\r\n              </h3>\r\n            </div>\r\n          </header>\r\n          <hr />\r\n\r\n          <div className='container'>\r\n            <section>\r\n              <DropDownButton name='Goals' content={data.first} />\r\n            </section>\r\n            <section>\r\n              <DropDownButton name='Education' content={data.second} />\r\n            </section>\r\n            <section>\r\n              <DropDownButton\r\n                name='Projects | Experience'\r\n                content={data.third}\r\n              />\r\n            </section>\r\n            <section>\r\n              <DropDownButton name='Skill Set' content={data.fourth} />\r\n            </section>\r\n          </div>\r\n          <footer className='footer'>\r\n            <p>&copy; 2019 Quincy Hill</p>\r\n          </footer>\r\n        </body>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport HomePage from \"./containers/HomePage\";\n\nfunction App() {\n  return (\n    <div>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}